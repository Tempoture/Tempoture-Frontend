[{"C:\\Users\\abidoa\\Google Drive\\School\\RCOS\\my-app\\src\\index.js":"1","C:\\Users\\abidoa\\Google Drive\\School\\RCOS\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\abidoa\\Google Drive\\School\\RCOS\\my-app\\src\\App.js":"3","C:\\Users\\abidoa\\Google Drive\\School\\RCOS\\my-app\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\abidoa\\Google Drive\\School\\RCOS\\my-app\\src\\components\\Navbar\\MenuItems.js":"5","C:\\Users\\abidoa\\Google Drive\\School\\RCOS\\my-app\\src\\components\\Navbar\\SidebarData.js":"6"},{"size":517,"mtime":1607116319080,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1607116319085,"results":"9","hashOfConfig":"8"},{"size":7824,"mtime":1613168429089,"results":"10","hashOfConfig":"8"},{"size":1421,"mtime":1613171407579,"results":"11","hashOfConfig":"8"},{"size":304,"mtime":1607665157644,"results":"12","hashOfConfig":"8"},{"size":701,"mtime":1613171282885,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"c1p4hb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\abidoa\\Google Drive\\School\\RCOS\\my-app\\src\\index.js",[],["29","30"],"C:\\Users\\abidoa\\Google Drive\\School\\RCOS\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\abidoa\\Google Drive\\School\\RCOS\\my-app\\src\\App.js",["31","32"],"// import React, {useState, useEffect} from 'react';\r\n// import './App.css';\r\n\r\n// function App() {\r\n//   const [initialData, setInitialData] = useState([{}])\r\n\r\n//   useEffect(()=> {\r\n//     fetch('https://cors-anywhere.herokuapp.com/backendtempoture.herokuapp.com/api').then(\r\n//       response => response.json()\r\n//     ).then(data => setInitialData(data))\r\n//   }, []);\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <h1>{initialData.title}</h1>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\nimport React, { Component } from 'react';\r\nimport 'reset-css/reset.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport './App.css';\r\nimport queryString from 'query-string';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\n\r\nlet defaultStyle = {\r\n  color: '#fff',\r\n  'font-family': 'Papyrus'\r\n};\r\nlet counterStyle = {\r\n  ...defaultStyle,\r\n  width: \"40%\",\r\n  display: 'inline-block',\r\n  'margin-bottom': '20px',\r\n  'font-size': '20px',\r\n  'line-height': '30px'\r\n}\r\nconst loginButtonSection = {\r\n  position: 'absolute',\r\n  width: '354px',\r\n  height: '52px',\r\n  left: '800px',\r\n  top: '607px',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  'font_family': 'Arial',\r\n  'font_style': 'normal',\r\n  'font-weight': 'bold',\r\n  'font-size': '26px',\r\n  'line-height': '41px',\r\n  color: '#FFFFFF',\r\n  'border-radius': '138.21px',\r\n  background: 'Transparent'\r\n};\r\nlet wordStyles = {\r\n  'font-family': 'Papyrus',\r\n  'font-style': 'italic',\r\n  'font-weight': 'normal',\r\n  'font-size': '110px',\r\n  'line-height': '130px',\r\n\r\n  color: '#000000'\r\n}\r\nfunction isEven(number) {\r\n  return number % 2\r\n}\r\n\r\nclass PlaylistCounter extends Component {\r\n  render() {\r\n    let playlistCounterStyle = counterStyle\r\n    return (\r\n      <div style={playlistCounterStyle}>\r\n        <h2>{this.props.playlists.length} playlists</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass HoursCounter extends Component {\r\n  render() {\r\n    let allSongs = this.props.playlists.reduce((songs, eachPlaylist) => {\r\n      return songs.concat(eachPlaylist.songs)\r\n    }, [])\r\n    let totalDuration = allSongs.reduce((sum, eachSong) => {\r\n      return sum + eachSong.duration\r\n    }, 0)\r\n    let totalDurationHours = Math.round(totalDuration / 60)\r\n    let isTooLow = totalDurationHours < 40\r\n    let hoursCounterStyle = {\r\n      ...counterStyle,\r\n      color: isTooLow ? 'red' : 'white',\r\n      'font-weight': isTooLow ? 'bold' : 'normal',\r\n    }\r\n    return (\r\n      <div style={hoursCounterStyle}>\r\n        <h2>{totalDurationHours} hours</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    return (\r\n      <div style={defaultStyle}>\r\n        <img />\r\n        <input type=\"text\" onKeyUp={event =>\r\n          this.props.onTextChange(event.target.value)}\r\n          style={{\r\n            ...defaultStyle,\r\n            color: 'black',\r\n            'font-size': '20px',\r\n            padding: '10px'\r\n          }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Playlist extends Component {\r\n  render() {\r\n    let playlist = this.props.playlist\r\n    return (\r\n      <div style={{\r\n        ...defaultStyle,\r\n        display: 'inline-block',\r\n        width: \"25%\",\r\n        padding: '10px',\r\n        'background-color': isEven(this.props.index)\r\n          ? '#C0C0C0'\r\n          : '#808080'\r\n      }}>\r\n        <h2>{playlist.name}</h2>\r\n        <img src={playlist.imageUrl} style={{ width: '60px' }} />\r\n        <ul style={{ 'margin-top': '10px', 'font-weight': 'bold' }}>\r\n          {playlist.songs.map(song =>\r\n            <li style={{ 'padding-top': '2px' }}>{song.name}</li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      serverData: {},\r\n      filterString: ''\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let parsed = queryString.parse(window.location.search);\r\n    let accessToken = parsed.access_token;\r\n    if (!accessToken)\r\n      return;\r\n    fetch('https://api.spotify.com/v1/me', {\r\n      headers: { 'Authorization': 'Bearer ' + accessToken }\r\n    }).then(response => response.json())\r\n      .then(data => this.setState({\r\n        user: {\r\n          name: data.display_name\r\n        }\r\n      }))\r\n\r\n    fetch('https://api.spotify.com/v1/me/playlists', {\r\n      headers: { 'Authorization': 'Bearer ' + accessToken }\r\n    }).then(response => response.json())\r\n      .then(playlistData => {\r\n        let playlists = playlistData.items\r\n        let trackDataPromises = playlists.map(playlist => {\r\n          let responsePromise = fetch(playlist.tracks.href, {\r\n            headers: { 'Authorization': 'Bearer ' + accessToken }\r\n          })\r\n          let trackDataPromise = responsePromise\r\n            .then(response => response.json())\r\n          return trackDataPromise\r\n        })\r\n        let allTracksDataPromises =\r\n          Promise.all(trackDataPromises)\r\n        let playlistsPromise = allTracksDataPromises.then(trackDatas => {\r\n          trackDatas.forEach((trackData, i) => {\r\n            playlists[i].trackDatas = trackData.items\r\n              .map(item => item.track)\r\n              .map(trackData => ({\r\n                name: trackData.name,\r\n                duration: trackData.duration_ms / 1000\r\n              }))\r\n          })\r\n          return playlists\r\n        })\r\n        return playlistsPromise\r\n      })\r\n      .then(playlists => this.setState({\r\n        playlists: playlists.map(item => {\r\n          return {\r\n            name: item.name,\r\n            imageUrl: item.images[0].url,\r\n            songs: item.trackDatas.slice(0, 3)\r\n          }\r\n        })\r\n      }))\r\n\r\n      fetch('https://api.spotify.com/v1/me/player/recently-played',{\r\n            headers: { 'Authorization': 'Bearer ' + accessToken }\r\n      }).then(response => response.json())\r\n\r\n  }\r\n  render() {\r\n    let playlistToRender =\r\n      this.state.user &&\r\n        this.state.playlists\r\n        ? this.state.playlists.filter(playlist => {\r\n          let matchesPlaylist = playlist.name.toLowerCase().includes(\r\n            this.state.filterString.toLowerCase())\r\n          let matchesSong = playlist.songs.find(song => song.name.toLowerCase()\r\n            .includes(this.state.filterString.toLowerCase()))\r\n          return matchesPlaylist || matchesSong\r\n        }) : []\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n        <Navbar />\r\n        <p style={{\r\n          ...wordStyles,\r\n          position: 'absolute',\r\n          width: '961px',\r\n          height: '218px',\r\n          left: '500px',\r\n          top: '297px',}}> Music</p>\r\n          <p style={{\r\n          ...wordStyles, \r\n          position: 'absolute',\r\n          width: '961px',\r\n          height: '218px',\r\n          left: '500px',\r\n          top: '400px',}}>for your Weather</p>\r\n        {this.state.user ?\r\n          <div>\r\n            <h1 style={{\r\n              ...defaultStyle,\r\n              'font-size': '54px',\r\n              'margin-top': '5px'\r\n            }}>\r\n              {this.state.user.name}'s Playlists\r\n          </h1>\r\n            <PlaylistCounter playlists={playlistToRender} />\r\n            <HoursCounter playlists={playlistToRender} />\r\n            <Filter onTextChange={text => {\r\n              this.setState({ filterString: text })\r\n            }} />\r\n            {playlistToRender.map((playlist, i) =>\r\n              <Playlist playlist={playlist} index={i} />\r\n            )}\r\n          </div> : <button onClick={() => {\r\n            window.location = window.location.href.includes('localhost')\r\n              ? 'http://localhost:8888/login'\r\n              : 'https://frontendtempoture.herokuapp.com/login'\r\n          }\r\n          }\r\n          style={{...loginButtonSection}}>CONNECT SPOTIFY</button>\r\n        }\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\abidoa\\Google Drive\\School\\RCOS\\my-app\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\abidoa\\Google Drive\\School\\RCOS\\my-app\\src\\components\\Navbar\\MenuItems.js",[],["33","34"],"C:\\Users\\abidoa\\Google Drive\\School\\RCOS\\my-app\\src\\components\\Navbar\\SidebarData.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":107,"column":9,"nodeType":"41","endLine":107,"endColumn":16},{"ruleId":"39","severity":1,"message":"40","line":135,"column":9,"nodeType":"41","endLine":135,"endColumn":66},{"ruleId":"35","replacedBy":"42"},{"ruleId":"37","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["44"],["45"],"no-global-assign","no-unsafe-negation"]